// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: findmax/protofindmax/findmax.proto

package protofindmax

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Findmax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A int64 `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
}

func (x *Findmax) Reset() {
	*x = Findmax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_findmax_protofindmax_findmax_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Findmax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Findmax) ProtoMessage() {}

func (x *Findmax) ProtoReflect() protoreflect.Message {
	mi := &file_findmax_protofindmax_findmax_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Findmax.ProtoReflect.Descriptor instead.
func (*Findmax) Descriptor() ([]byte, []int) {
	return file_findmax_protofindmax_findmax_proto_rawDescGZIP(), []int{0}
}

func (x *Findmax) GetA() int64 {
	if x != nil {
		return x.A
	}
	return 0
}

type FindmaxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Findmax *Findmax `protobuf:"bytes,1,opt,name=findmax,proto3" json:"findmax,omitempty"`
}

func (x *FindmaxRequest) Reset() {
	*x = FindmaxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_findmax_protofindmax_findmax_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindmaxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindmaxRequest) ProtoMessage() {}

func (x *FindmaxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_findmax_protofindmax_findmax_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindmaxRequest.ProtoReflect.Descriptor instead.
func (*FindmaxRequest) Descriptor() ([]byte, []int) {
	return file_findmax_protofindmax_findmax_proto_rawDescGZIP(), []int{1}
}

func (x *FindmaxRequest) GetFindmax() *Findmax {
	if x != nil {
		return x.Findmax
	}
	return nil
}

type FindmaxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int64 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindmaxResponse) Reset() {
	*x = FindmaxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_findmax_protofindmax_findmax_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindmaxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindmaxResponse) ProtoMessage() {}

func (x *FindmaxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_findmax_protofindmax_findmax_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindmaxResponse.ProtoReflect.Descriptor instead.
func (*FindmaxResponse) Descriptor() ([]byte, []int) {
	return file_findmax_protofindmax_findmax_proto_rawDescGZIP(), []int{2}
}

func (x *FindmaxResponse) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

var File_findmax_protofindmax_findmax_proto protoreflect.FileDescriptor

var file_findmax_protofindmax_findmax_proto_rawDesc = []byte{
	0x0a, 0x22, 0x66, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x66,
	0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x22, 0x17, 0x0a,
	0x07, 0x46, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x01, 0x61, 0x22, 0x3c, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x6d, 0x61,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x66, 0x69, 0x6e, 0x64,
	0x6d, 0x61, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x69, 0x6e, 0x64,
	0x6d, 0x61, 0x78, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x52, 0x07, 0x66, 0x69, 0x6e,
	0x64, 0x6d, 0x61, 0x78, 0x22, 0x29, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32,
	0x52, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x40, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x12, 0x17, 0x2e, 0x66,
	0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28,
	0x01, 0x30, 0x01, 0x42, 0x18, 0x5a, 0x16, 0x2e, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x66, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_findmax_protofindmax_findmax_proto_rawDescOnce sync.Once
	file_findmax_protofindmax_findmax_proto_rawDescData = file_findmax_protofindmax_findmax_proto_rawDesc
)

func file_findmax_protofindmax_findmax_proto_rawDescGZIP() []byte {
	file_findmax_protofindmax_findmax_proto_rawDescOnce.Do(func() {
		file_findmax_protofindmax_findmax_proto_rawDescData = protoimpl.X.CompressGZIP(file_findmax_protofindmax_findmax_proto_rawDescData)
	})
	return file_findmax_protofindmax_findmax_proto_rawDescData
}

var file_findmax_protofindmax_findmax_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_findmax_protofindmax_findmax_proto_goTypes = []interface{}{
	(*Findmax)(nil),         // 0: findmax.Findmax
	(*FindmaxRequest)(nil),  // 1: findmax.FindmaxRequest
	(*FindmaxResponse)(nil), // 2: findmax.FindmaxResponse
}
var file_findmax_protofindmax_findmax_proto_depIdxs = []int32{
	0, // 0: findmax.FindmaxRequest.findmax:type_name -> findmax.Findmax
	1, // 1: findmax.FindmaxService.Findmax:input_type -> findmax.FindmaxRequest
	2, // 2: findmax.FindmaxService.Findmax:output_type -> findmax.FindmaxResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_findmax_protofindmax_findmax_proto_init() }
func file_findmax_protofindmax_findmax_proto_init() {
	if File_findmax_protofindmax_findmax_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_findmax_protofindmax_findmax_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Findmax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_findmax_protofindmax_findmax_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindmaxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_findmax_protofindmax_findmax_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindmaxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_findmax_protofindmax_findmax_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_findmax_protofindmax_findmax_proto_goTypes,
		DependencyIndexes: file_findmax_protofindmax_findmax_proto_depIdxs,
		MessageInfos:      file_findmax_protofindmax_findmax_proto_msgTypes,
	}.Build()
	File_findmax_protofindmax_findmax_proto = out.File
	file_findmax_protofindmax_findmax_proto_rawDesc = nil
	file_findmax_protofindmax_findmax_proto_goTypes = nil
	file_findmax_protofindmax_findmax_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FindmaxServiceClient is the client API for FindmaxService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FindmaxServiceClient interface {
	Findmax(ctx context.Context, opts ...grpc.CallOption) (FindmaxService_FindmaxClient, error)
}

type findmaxServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFindmaxServiceClient(cc grpc.ClientConnInterface) FindmaxServiceClient {
	return &findmaxServiceClient{cc}
}

func (c *findmaxServiceClient) Findmax(ctx context.Context, opts ...grpc.CallOption) (FindmaxService_FindmaxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FindmaxService_serviceDesc.Streams[0], "/findmax.FindmaxService/Findmax", opts...)
	if err != nil {
		return nil, err
	}
	x := &findmaxServiceFindmaxClient{stream}
	return x, nil
}

type FindmaxService_FindmaxClient interface {
	Send(*FindmaxRequest) error
	Recv() (*FindmaxResponse, error)
	grpc.ClientStream
}

type findmaxServiceFindmaxClient struct {
	grpc.ClientStream
}

func (x *findmaxServiceFindmaxClient) Send(m *FindmaxRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *findmaxServiceFindmaxClient) Recv() (*FindmaxResponse, error) {
	m := new(FindmaxResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FindmaxServiceServer is the server API for FindmaxService service.
type FindmaxServiceServer interface {
	Findmax(FindmaxService_FindmaxServer) error
}

// UnimplementedFindmaxServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFindmaxServiceServer struct {
}

func (*UnimplementedFindmaxServiceServer) Findmax(FindmaxService_FindmaxServer) error {
	return status.Errorf(codes.Unimplemented, "method Findmax not implemented")
}

func RegisterFindmaxServiceServer(s *grpc.Server, srv FindmaxServiceServer) {
	s.RegisterService(&_FindmaxService_serviceDesc, srv)
}

func _FindmaxService_Findmax_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FindmaxServiceServer).Findmax(&findmaxServiceFindmaxServer{stream})
}

type FindmaxService_FindmaxServer interface {
	Send(*FindmaxResponse) error
	Recv() (*FindmaxRequest, error)
	grpc.ServerStream
}

type findmaxServiceFindmaxServer struct {
	grpc.ServerStream
}

func (x *findmaxServiceFindmaxServer) Send(m *FindmaxResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *findmaxServiceFindmaxServer) Recv() (*FindmaxRequest, error) {
	m := new(FindmaxRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _FindmaxService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "findmax.FindmaxService",
	HandlerType: (*FindmaxServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Findmax",
			Handler:       _FindmaxService_Findmax_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "findmax/protofindmax/findmax.proto",
}
